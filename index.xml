<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Yannick</title>
        <link>https://yannick-995.github.io/</link>
        <description>Recent content on Yannick</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <copyright>Yannick</copyright>
        <lastBuildDate>Sat, 24 Aug 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://yannick-995.github.io/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>关于</title>
        <link>https://yannick-995.github.io/%E5%85%B3%E4%BA%8E/</link>
        <pubDate>Sat, 24 Aug 2024 00:00:00 +0000</pubDate>
        
        <guid>https://yannick-995.github.io/%E5%85%B3%E4%BA%8E/</guid>
        <description>&lt;blockquote&gt;
&lt;p&gt;Written in Go, Hugo is an open source static site generator available under the &lt;a class=&#34;link&#34; href=&#34;https://github.com/gohugoio/hugo/blob/master/LICENSE&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Apache License 2.0.&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;本博客用于梳理自己的学习成果，记录学习笔记。&lt;br&gt;
目前学习计划：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;C语言程序设计 ：看完&lt;a class=&#34;link&#34; href=&#34;http://cslabcms.nju.edu.cn/problem_solving/images/c/cc/The_C_Programming_Language_%282nd_Edition_Ritchie_Kernighan%29.pdf&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;The C programming language (2nd Edition)&lt;/a&gt;，参考&lt;a class=&#34;link&#34; href=&#34;http://www.why.ink:8080/CPL/2023/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;C程序设计基础&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://ysyx.oscc.cc/docs/ics-pa/PA0.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;南大“”计算机基础“”实验&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;操作系统概述&lt;/li&gt;
&lt;li&gt;学习使用linux&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;学习记录&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;日期&lt;/th&gt;
&lt;th&gt;学习内容&lt;/th&gt;
&lt;th&gt;学习感悟&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;备注&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;未知&lt;/td&gt;
&lt;td&gt;学习计算机基础实验，学习到PA0,简易调试器中打印寄存器理解可能不到位，扫描内存未实现，需要先实现表达式求值&lt;/td&gt;
&lt;td&gt;感觉有点吃力，需要多看几遍才能理解要实现的功能，由于打印寄存器是最先实现的，前期理解不充分，导致错误实现&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;未知&lt;/td&gt;
&lt;td&gt;计算机基础实验：表达式求值，表达式求值除了寄存器求值未实现，其余的都实现了（如何测试你的代码这个小节还未实现）&lt;/td&gt;
&lt;td&gt;在表达式求值这个章节看了b站why老师的实验录播，发现可以把代码拷贝出来实现，但是拷贝出来发现需要整个拷贝，有一点多余，目前使用的是&lt;code&gt;#ifndef&lt;/code&gt;宏定义来选择程序是执行验证代码还是架构代码，后续的代码测试可能也会使用宏定义来单独调试测试部分&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;未知&lt;/td&gt;
&lt;td&gt;C语言程序设计看到了结构体&lt;/td&gt;
&lt;td&gt;目前只看了一部分，感觉需要第二遍看，有许多代码没有细看，后续不知道看lib代码对代码的书写有所提升，第一遍看译本，第二遍争取看原本，同时适应英语环境&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;2024 - 08 -24&lt;/td&gt;
&lt;td&gt;学习使用hugo搭建博客&lt;/td&gt;
&lt;td&gt;目前在使用hugo server 指令时主页无法显示文章 ，在和主题模板比对时发现 模板头是使用的”&amp;mdash;“ 而hugo生成的是“+++”，并且语言风格也有差异，不知道是什么原因&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
</description>
        </item>
        <item>
        <title>Study Notes</title>
        <link>https://yannick-995.github.io/p/study-notes/</link>
        <pubDate>Thu, 22 Aug 2024 22:21:56 +0800</pubDate>
        
        <guid>https://yannick-995.github.io/p/study-notes/</guid>
        <description>&lt;h1 id=&#34;0-hello-world-&#34;&gt;0 Hello World !!
&lt;/h1&gt;&lt;h1 id=&#34;1-hugo&#34;&gt;1 hugo
&lt;/h1&gt;&lt;h2 id=&#34;11-create-new-content&#34;&gt;1.1 create new content
&lt;/h2&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;hugo new content &amp;lt;SECTIONNAME&amp;gt;\&amp;lt;FILENAME&amp;gt;.&amp;lt;FORMAT&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;e.g.hugo new content post/myFirstBlog/index.md 
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;12-hugo-server--d&#34;&gt;1.2 hugo server -D
&lt;/h2&gt;&lt;p&gt;　　Start the embedded web server with the command &amp;ldquo;hugo server &amp;ndash;buildDrafts&amp;rdquo;  .&lt;br&gt;
也可以使用hugo server -D&lt;/p&gt;
&lt;h1 id=&#34;2-git使用&#34;&gt;2 git使用
&lt;/h1&gt;&lt;h2 id=&#34;21-将更新推送到github远程仓库&#34;&gt;2.1 将更新推送到Github远程仓库
&lt;/h2&gt;&lt;h3 id=&#34;211-第一次上传代码需要的步骤&#34;&gt;2.1.1 第一次上传代码需要的步骤
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;git pull origin main：从GitHub上获取最新的更改&lt;/li&gt;
&lt;li&gt;git add . ：增加当前目录下的所有更改（包括新文件和修改过的文件）添加到暂存区&lt;/li&gt;
&lt;li&gt;git commit -m &amp;ldquo;change commit&amp;rdquo;：将暂存区的更改提交到你的本地仓库 -m后面是你对本次提交更改所做的简单描述&lt;/li&gt;
&lt;li&gt;git branch -M main：用于重命名当前分支为 main。这个命令通常用于将默认分支从 master 改为 main，因为 master 这个词在某些社区中被认为是有争议的，所以很多项目和组织选择使用 main 或其他名称作为默认分支。&lt;/li&gt;
&lt;li&gt;git remote add origin git remote add origin &lt;a class=&#34;link&#34; href=&#34;https://github.com/username/repository.git&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/username/repository.git&lt;/a&gt;：是一个Git命令，用于将一个远程仓库地址添加到你的本地Git仓库中。这里的 &lt;strong&gt;username&lt;/strong&gt; 应该替换成你的GitHub仓库。&lt;/li&gt;
&lt;li&gt;git push -u origin main：用于将本地的 main 分支推送到远程仓库的 origin 仓库，如果已经配置了上游跟踪关系，并且只是想推送更改，可以简单的使用&lt;code&gt;git push&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;212-如果是clone一个代码并且修改后上传&#34;&gt;2.1.2 如果是clone一个代码，并且修改后上传
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;git clone &lt;a class=&#34;link&#34; href=&#34;https://github.com/username/repository.git&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/username/repository.git&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;切换到仓库目录&lt;/li&gt;
&lt;li&gt;编辑代码&lt;/li&gt;
&lt;li&gt;git add .：将所有更改添加到暂存区&lt;/li&gt;
&lt;li&gt;git commit -m &amp;ldquo;Your commit message&amp;rdquo;&lt;/li&gt;
&lt;li&gt;git push origin main: 配置好后，后续可以直接使用&lt;code&gt;git push&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;213-其他命令&#34;&gt;2.1.3 其他命令
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;git checkout -b pa0：这个命令创建并&lt;strong&gt;切换&lt;/strong&gt;到一个名为pa0的新分支。-b参数表示创建新分支。&lt;/li&gt;
&lt;li&gt;git checkout master：这个命令切换回master主分支。&lt;/li&gt;
&lt;li&gt;git checkout -f main:Git将会丢弃我们未提交的修改，并强制切换到主分支(main branch)。&lt;/li&gt;
&lt;li&gt;git fetch：git fetch 命令用于从远程仓库获取所有分支的更新，但不会自动合并到你的当前分支。
它将远程分支的最新状态下载到你的本地仓库，但不会影响你的工作目录。
你可以在 fetch 之后使用 git merge 或 git rebase 来合并这些更改到你的当前分支。&lt;/li&gt;
&lt;li&gt;git pull：git pull 命令实际上是 git fetch 后跟 git merge 的快捷方式。
它首先获取远程分支的最新更改，然后自动尝试将这些更改合并到你当前的分支。
如果远程分支的更改与你当前分支的更改有冲突，git pull 会停止合并并让你解决这些冲突。&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;简单来说，git fetch 只是获取远程的更改，而 git pull 不仅获取更改，还尝试将它们合并到你的当前工作。使用 git fetch 可以让你更细致地控制合并过程，而使用 git pull 则更快捷，但可能需要解决合并时的冲突。&lt;/p&gt;
&lt;/blockquote&gt;
</description>
        </item>
        <item>
        <title>归档</title>
        <link>https://yannick-995.github.io/archives/</link>
        <pubDate>Tue, 28 May 2019 00:00:00 +0000</pubDate>
        
        <guid>https://yannick-995.github.io/archives/</guid>
        <description></description>
        </item>
        <item>
        <title>搜索</title>
        <link>https://yannick-995.github.io/search/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>https://yannick-995.github.io/search/</guid>
        <description></description>
        </item>
        <item>
        <title>友情链接</title>
        <link>https://yannick-995.github.io/%E5%8F%8B%E6%83%85%E9%93%BE%E6%8E%A5/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>https://yannick-995.github.io/%E5%8F%8B%E6%83%85%E9%93%BE%E6%8E%A5/</guid>
        <description></description>
        </item>
        
    </channel>
</rss>
